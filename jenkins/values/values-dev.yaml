controller:
  image: "jenkins/jenkins"
  tag: "2.414.3-jdk17"
  installPlugins:
  - kubernetes:1.31.3
  - workflow-aggregator:2.6
  - git:4.10.0
  - matrix-auth:2.6.8
  - credentials-binding:1.27
  - ssh-slaves:1.32.0
  - pipeline-model-definition:2.2
  - pipeline-utility-steps:2.10.0
  - git-client:3.9.1
  - docker-plugin:1.2.2
  - blueocean:1.25.3
  - workflow-multibranch:2.26
  - ws-cleanup:0.40
  - dashboard-view:2.17
  - material-theme:0.3.4
  - theme-manager:0.6
  - simple-theme-plugin:0.7
  - custom-logo:1.1
  - cloudbees-folder:6.16
  # JCasC configuration to add the agent pod templates
  JCasC:
    configScripts:
      agents: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                templates:
                  - name: "java11-agent"
                    label: "java11"
                    nodeUsageMode: NORMAL
                    containers:
                      - name: "jnlp"
                        image: "jenkins/inbound-agent:3206.vb_15dcf73f6a_9-jdk11"
                  - name: "java17-agent"
                    label: "java17"
                    nodeUsageMode: NORMAL
                    containers:
                      - name: "jnlp"
                        image: "jenkins/inbound-agent:3206.vb_15dcf73f6a_9-jdk17"
  # Enable cleanup of finished agents
  podRetention: "Never"
  # Jenkins admin user credentials
  adminUser: admin
  adminPassword: admin
  # Resources settings
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"

agent:
  enabled: false

additionalAgents:
  java11:
    podName: java11-agent
    customJenkinsLabels: java11
    image: jenkins/inbound-agent
    tag: "3206.vb_15dcf73f6a_9-jdk11"
    resources:
      requests:
        cpu: "500m"
        memory: "256Mi"
      limits:
        cpu: "1"
        memory: "512Mi"
  java17:
    podName: java17-agent
    customJenkinsLabels: java17
    image: jenkins/inbound-agent
    tag: "3206.vb_15dcf73f6a_9-jdk17"
    resources:
      requests:
        cpu: "500m"
        memory: "256Mi"
      limits:
        cpu: "1"
        memory: "512Mi"

service:
  type: LoadBalancer
  port: 8080

# Storage configuration
persistence:
  enabled: true
  existingClaim: ""
  storageClass: "standard"
  accessMode: "ReadWriteOnce"
  size: "10Gi"

# Node selector to run Jenkins on specific nodes if needed
nodeSelector: {}

# Tolerations for scheduling pods on nodes with taints
tolerations: []

# Affinity rules for scheduling pods
affinity: {}

rbac:
  create: true

serviceAccount:
  create: true
  name: "jenkins"

secrets:
  enabled: false
